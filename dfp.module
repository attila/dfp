<?php

/**
 * Implements hook_permission().
 */
function dfp_permission() {
  return array(
    'administer DFP' => array(
      'title' => t('Administer Doubleclick for Publisher ads'),
      'description' => t('Users can create, edit, and delete Doubleclick for Publishers (dfp) ad tags and configure how and when they should be displayed.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function dfp_theme() {
  $theme_hooks = array(
    'dfp_targeting' => array(
      'render element' => 'form',
      'file' => 'dfp.admin.inc',
    ),
  );

  return $theme_hooks;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function dfp_ctools_plugin_directory($module, $type) {
  // Load the export_ui plugin.
  if ($type == 'export_ui') {
    return 'plugins/export_ui';
  }
}

/**
 * Load function.
 */
function dfp_tag_load($machinename = '') {
  ctools_include('export');

  // Grab an array of all DART tags or the specificed DART tag.
  if (empty($machinename)) {
    $tags = ctools_export_load_object('dfp_tags');
  }
  else {
    $tags = ctools_export_load_object('dfp_tags', 'names', array($machinename));
  }

  // foreach ($tags as $tag) {
  //   $settings = unserialize($tag->settings);
  //   foreach ($settings as $setting -> $value) {
  //     $tag->{$setting} = $value;
  //   }
  // }

  // Build up the tag objects
  return empty($machinename) ? $tags : array_shift($tags);
}

/**
* Save a single tag.
*/
function dfp_tag_save(&$tag) {
  $update = (isset($tag->adid) && is_numeric($tag->adid)) ? array('adid') : array();
  return drupal_write_record('dfp_tag', $tag, $update);
}

