<?php

/**
 * Implements hook_help().
 */
function dfp_help($path, $arg) {
  switch ($path) {
    case 'admin/help#dfp':
      $output = '<p>' . t('The Doubleclick For Publishers (DFP) module allows you to integrate Google Publisher Tags onto your site.') . '</p>';
      $output .= '<p>' . t('This module provides you with a general settings form as well as the ability to create a tag (with all its associated data) in the database. You can display your ads as blocks, or add a simple bit of php to your tpl.php file(s) within your theme to indicate where specific tags should be displayed.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_permission().
 */
function dfp_permission() {
  return array(
    'administer DFP' => array(
      'title' => t('Administer Doubleclick for Publisher ads'),
      'description' => t('Users can create, edit, and delete Doubleclick for Publishers (dfp) ad tags and configure how and when they should be displayed.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function dfp_theme() {
  $theme_hooks = array(
    'dfp_target' => array(
      'render element' => 'form',
      'file' => 'dfp.admin.inc',
    ),
  );

  return $theme_hooks;
}

/**
 * Implements hook_menu().
 */
function dfp_menu() {
  $items = array();

  $items['admin/structure/dfp_ads/settings'] = array(
    'title' => 'Global DFP Settings',
    'type' => MENU_LOCAL_TASK,
    'description' => "Configure your site-wide DFP settings.",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dfp_admin_settings'),
    'access arguments' => array('administer DFP'),
    'file' => 'dfp.admin.inc',
    'weight' => 5,
  );
  $items['admin/structure/dfp_ads/test_page'] = array(
    'title' => 'DFP Test Page',
    'type' => MENU_LOCAL_TASK,
    'description' => "View all your DFP tags on a single page",
    'page callback' => 'dfp_test_page',
    'access arguments' => array('administer DFP'),
    'weight' => 10,
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function dfp_ctools_plugin_directory($module, $type) {
  // Load the export_ui plugin.
  if ($type == 'export_ui') {
    return 'plugins/export_ui';
  }
}

/**
 * Load function.
 */
function dfp_tag_load($machinename = '') {
  ctools_include('export');

  // Grab an array of all DART tags or the specificed DART tag.
  if (empty($machinename)) {
    $tags = ctools_export_load_object('dfp_tags');
  }
  else {
    $tags = ctools_export_load_object('dfp_tags', 'names', array($machinename));
  }

  foreach ($tags as &$tag) {
    $tag->settings = is_array($tag->settings) ? $tag->settings : unserialize($tag->settings);
  }

  // Build up the tag objects
  return empty($machinename) ? $tags : array_shift($tags);
}

/**
* Save a single tag.
*/
function dfp_tag_save(&$tag) {
  $update = (isset($tag->adid) && is_numeric($tag->adid)) ? array('adid') : array();
  return drupal_write_record('dfp_tag', $tag, $update);
}

