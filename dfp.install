<?php

/**
 * @file
 * Installation file for DFP module.
 */

/**
 * Implements hook_schema().
 */
function dfp_schema() {
  $schema['dfp_tags'] = array(
    'description' => 'Stores information about DFP ad tags.',
    'export' => array(
      'key' => 'machinename',
      'primary key' => 'adid',
      'identifier' => 'tag', // Exports will be available as $tag
      'default hook' => 'default_dfp_tag', // Function hook name.
      'api' => array(
        'owner' => 'dfp',
        'api' => 'default_dfp_tags', // Base name for api include files.
        'minimum_version' => 1,
        'current_version' => 1,
      ),
      'load callback' => 'dfp_tag_load',
    ),
    'fields' => array(
      'adid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary ID field for the table. Not used for anything except internal lookups.',
        'no export' => TRUE, // Do not export database-only keys.
      ),
      'machinename' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => "The tag's unique name.",
      ),
      'slot' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => "The ad slot's name.",
      ),
      'adunit' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => '',
        'description' => "The ad unit name.",
      ),
      'size' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => "The tag's size(s).",
      ),
      'block' => array(
        'type' => 'int',
        'default' => 0,
        'description' => 'If true, a block will be created in which to display this ad tag.',
      ),
      'settings' => array(
        'type' => 'blob',
        'description' => "Serialized array of settings.",
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('adid'),
    'unique keys' => array(
      'machinename' => array('machinename'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function dfp_install() {
  $vocabulary_machinename = 'dfp_ad_categories';

  // If it doesn't already exist, create a vocabulary so that terms can be
  // targeted in groups.
  $existing_vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_machinename);
  if (!$existing_vocabulary) {
    taxonomy_vocabulary_save((object) array(
      'name' => 'DFP Ad Catergories',
      'machine_name' => $vocabulary_machinename,
    ));
  }

  // Create a new term_reference field for the new vocabulary.
  $field = array(
    'field_name' => 'field_dfp_ad_categories',
    'type' => 'taxonomy_term_reference',
    'settings' => array(
      'allowed_values' => array(
        array(
          'vocabulary' => $vocabulary_machinename,
          'parent' => 0
        ),
      ),
    ),
  );
  field_create_field($field);

}





